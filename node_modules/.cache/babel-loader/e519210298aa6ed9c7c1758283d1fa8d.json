{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ianwoodward/Documents/GitRepos/my-lists/src/components/AddBar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport AddButton from \"./AddButton\";\n\nfunction AddBar(props) {\n  _s();\n\n  const [titleCreated, setTitleCreated] = useState(false);\n  const [value, setValue] = useState(\"\");\n\n  function makeTitle(event) {\n    const newTitle = event.target.value;\n    setNote(prevNote => {\n      return {\n        title: newTitle,\n        ...prevNote\n      };\n    });\n  }\n\n  function createTitle(event) {\n    const newValue = event.target.value;\n    setValue(newValue);\n    setTitleCreated(true);\n    console.log(\" this is the value \" + value + event.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.isTitle && !titleCreated || !props.isTitle ? /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        display: \"inline-block\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(AddButton, {\n        handleAdded: createTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: props.makeTitle,\n          name: props.name,\n          placeholder: props.placeholder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 12\n  }, this);\n}\n\n_s(AddBar, \"aJSUpIMHELaA7T9yS5oToUe8YeE=\");\n\n_c = AddBar;\nexport default AddBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddBar\");","map":{"version":3,"sources":["/Users/ianwoodward/Documents/GitRepos/my-lists/src/components/AddBar.jsx"],"names":["React","useState","AddButton","AddBar","props","titleCreated","setTitleCreated","value","setValue","makeTitle","event","newTitle","target","setNote","prevNote","title","createTitle","newValue","console","log","isTitle","display","name","placeholder"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAsB;AAAA;;AAElB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,KAAD,CAAhD;AAEA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;;AAEA,WAASQ,SAAT,CAAmBC,KAAnB,EAAyB;AACrB,UAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAaL,KAA9B;AACAM,IAAAA,OAAO,CAACC,QAAQ,IAAI;AAChB,aAAO;AACHC,QAAAA,KAAK,EAAEJ,QADJ;AAEH,WAAGG;AAFA,OAAP;AAIH,KALM,CAAP;AAMH;;AAED,WAASE,WAAT,CAAqBN,KAArB,EAA2B;AACvB,UAAMO,QAAQ,GAAGP,KAAK,CAACE,MAAN,CAAaL,KAA9B;AACAC,IAAAA,QAAQ,CAACS,QAAD,CAAR;AACAX,IAAAA,eAAe,CAAC,IAAD,CAAf;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAwBZ,KAAxB,GAAgCG,KAAK,CAACE,MAAN,CAAaL,KAAzD;AACH;;AAED,sBAAO;AAAA,cACHH,KAAK,CAACgB,OAAN,IAAiB,CAACf,YAAnB,IAAoC,CAACD,KAAK,CAACgB,OAA5C,gBACF;AAAM,MAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAAC;AAAT,OAAb;AAAA,8BACI,QAAC,SAAD;AAAW,QAAA,WAAW,EAAEL;AAAxB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,+BACI;AACI,UAAA,QAAQ,EAAEZ,KAAK,CAACK,SADpB;AAEI,UAAA,IAAI,EAAEL,KAAK,CAACkB,IAFhB;AAGI,UAAA,WAAW,EAAElB,KAAK,CAACmB;AAHvB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADE,gBAUQ;AAAA,gBAAKhB;AAAL;AAAA;AAAA;AAAA;AAAA;AAXH;AAAA;AAAA;AAAA;AAAA,UAAP;AAaH;;GApCQJ,M;;KAAAA,M;AAsCT,eAAeA,MAAf","sourcesContent":["import React, { useState } from \"react\";\nimport AddButton from \"./AddButton\";\n\nfunction AddBar(props){\n\n    const [titleCreated, setTitleCreated] = useState(false);\n\n    const [value, setValue] = useState(\"\");\n\n    function makeTitle(event){\n        const newTitle = event.target.value;\n        setNote(prevNote => {\n            return {\n                title: newTitle,\n                ...prevNote\n            }\n        });\n    }\n\n    function createTitle(event){\n        const newValue = event.target.value;\n        setValue(newValue);\n        setTitleCreated(true);\n        console.log(\" this is the value \" + value + event.target.value);\n    }\n\n    return <div>\n    { ((props.isTitle && !titleCreated) || !props.isTitle) ? \n    <span style={{display:\"inline-block\"}}>\n        <AddButton handleAdded={createTitle}/>\n        <form>\n            <input\n                onChange={props.makeTitle}\n                name={props.name}\n                placeholder={props.placeholder}\n            /> \n        </form>\n    </span> : <h3>{value}</h3>}\n</div>   \n}\n\nexport default AddBar;"]},"metadata":{},"sourceType":"module"}